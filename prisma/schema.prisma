// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  avatar        String?
  bio           String?
  location      String?
  phone         String?
  isAdmin       Boolean   @default(false)
  isVerified    Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  products      Product[]
  sentMessages     Message[]  @relation("SentMessages")
  receivedMessages Message[]  @relation("ReceivedMessages")
  reviews       Review[]   @relation("ReceivedReviews")
  givenReviews  Review[]   @relation("GivenReviews")
  savedProducts SavedProduct[]
}

model Product {
  id          String   @id @default(cuid())
  title       String
  description String
  price       Float
  category    String
  subcategory String?
  condition   String
  location    String
  images      String[]
  status      String   @default("active") // active, sold, deleted
  views       Int      @default(0)
  likes       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  seller      User     @relation(fields: [sellerId], references: [id])
  sellerId    String
  
  savedBy     SavedProduct[]
  reviews     Review[]
}

model Message {
  id          String   @id @default(cuid())
  text        String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId    String
  
  receiver    User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId  String
  
  chatId      String
  productId   String?
}

model Review {
  id          String   @id @default(cuid())
  rating      Int
  comment     String?
  createdAt   DateTime @default(now())
  
  reviewer    User     @relation("GivenReviews", fields: [reviewerId], references: [id])
  reviewerId  String
  
  reviewee    User     @relation("ReceivedReviews", fields: [revieweeId], references: [id])
  revieweeId  String
  
  product     Product? @relation(fields: [productId], references: [id])
  productId   String?
}

model SavedProduct {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  @@unique([userId, productId])
}

model Transaction {
  id            String   @id @default(cuid())
  amount        Float
  status        String   // completed, pending, cancelled
  paymentMethod String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  buyerId       String
  sellerId      String
  productId     String
}

model Report {
  id          String   @id @default(cuid())
  reason      String
  description String
  status      String   @default("pending") // pending, resolved, dismissed
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  reporterId  String
  reportedId  String?
  productId   String?
}

